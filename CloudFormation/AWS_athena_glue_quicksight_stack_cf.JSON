{
    "AWSTemplateFormatVersion" : "2010-09-09",
    "Description" : "Cloudformation stack for S3 buckets, Glue catalogs, Glue crawlers and IAM policies",
    "Parameters": {
        "DataBucketName": {
            "Description": "Name of S3 bucket to store data",
            "Type": "String"
        },
        "ScriptBucketName": {
            "Description": "Name of S3 bucket to store programming scripts",
            "Type": "String"
        },
        "LogBucketName": {
            "Description": "Name of S3 bucket to store log files",
            "Type": "String"
        },
        "GlueDatabaseName": {
            "Description": "Name of S3 bucket to store data",
            "Type": "String",
            "Default":"smart_hub_data_catalog"
        }
    },
    "Resources": {
        "DataBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "BucketName" : {"Ref":"DataBucketName"}
            }
        },
        "ScriptBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "BucketName" : {"Ref":"ScriptBucketName"}
            }
        },
        "logBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "BucketName" : {"Ref":"LogBucketName"}
            }
        },
        "GlueDatabase": {
            "Type" : "AWS::Glue::Database",
            "Properties": {
                "CatalogId": {"Ref":"AWS::AccountId"},
                "DataBaseInput":{
                    "Name":{"Ref":"GlueDatabaseName"},
                    "Description":"Glue Catalog to store Metadata"
                }
            }
        },
        "UsageData":{
            "DependsOn" : "GlueDatabase",
            "Type" : "AWS::Glue::Table",
            "Description" : "Glue Table for Usage Data",
            "Properties" : {
                "CatalogId" : {"Ref":"AWS::AccountId"},
                "DatabaseName" : {"Ref":"GlueDatabaseName"},
                "TableInput" : {
                    "Description" : "Glue Table for Usage Data",
                    "Name" : "smart_hub_UsageData_json",
                    "Parameters" : {
                        "classification": "json", 
                        "compressionType": "none" 
                    },
                    "TableType" : "EXTERNAL TABLE",
                    "PartitionKeys" : [ 
                        {
                            "Name" : "dt",
                            "Type" : "date"
                        }
                    ]
                },
                "StorageDescriptor" : {
                    "InputFormat" : "org.apache.hadoop.mapred.TextInputFormat",
                    "OutputFormat":"org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat",
                    "Columns":[
                        {
                            "Name" : "loc_id",
                            "Type" : "string"
                        },
                        {
                            "Name" : "ts",
                            "Type" : "bigint"
                        },
                        {
                            "Name" : "data",
                            "Type" : "struct<s_01:double,s_02:double,s_03:double,s_04:double,s_05:double,s_06:double,s_07:double,s_08:double,s_09:double,s_10:double>"
                        }
                    ],
                    "Location" : { "Fn::Join" : [ "", [ "s3://", {"Ref":"DataBucketName"}, "/smart_hub_data_json"] ] },
                    "SerdeInfo":{
                        "Parameters" : {
                            "feild.delim":","
                        },
                        "SerializationLibrary" : "org.openx.data.jsonserde.JsonSerDe"
                    }

                }                    
            }

        },
        "LocationData":{
            "DependsOn" : "GlueDatabase",
            "Type" : "AWS::Glue::Table",
            "Description" : "Glue Table for location Data",
            "Properties" : {
                "CatalogId" : {"Ref":"AWS::AccountId"},
                "DatabaseName" : {"Ref":"GlueDatabaseName"},
                "TableInput" : {
                    "Description" : "Glue Table for location Data",
                    "Name" : "smart_hub_location_csv",
                    "Parameters" : {
                        "classification": "csv", 
                        "compressionType": "none",
                        "skip.header.line.count": "1" 
                    },
                    "TableType" : "EXTERNAL TABLE",
                    "PartitionKeys" : [ 
                        {
                            "Name" : "state",
                            "Type" : "string"
                        }
                    ]
                },
                "StorageDescriptor" : {
                    "InputFormat" : "org.apache.hadoop.mapred.TextInputFormat",
                    "OutputFormat":"org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat",
                    "Columns":[
                        {
                            "Name" : "lon",
                            "Type" : "double"
                        },
                        {
                            "Name" : "lat",
                            "Type" : "double"
                        },
                        {
                            "Name" : "number",
                            "Type" : "string"
                        },
                        {
                            "Name" : "street",
                            "Type" : "string"
                        },
                        {
                            "Name" : "unit",
                            "Type" : "int"
                        },
                        {
                            "Name" : "city",
                            "Type" : "string"
                        },
                        {
                            "Name" : "district",
                            "Type" : "string"
                        },
                        {
                            "Name" : "region",
                            "Type" : "string"
                        },
                        {
                            "Name" : "postcode",
                            "Type" : "int"
                        },
                        {
                            "Name" : "id",
                            "Type" : "string"
                        },
                        {
                            "Name" : "hash",
                            "Type" : "string"
                        },
                        {
                            "Name" : "tz",
                            "Type" : "string"
                        }
                    ],
                    "Location" : { "Fn::Join" : [ "", [ "s3://", {"Ref":"DataBucketName"}, "/smart_hub_sensor_mapping_json"] ] },
                    "SerdeInfo":{
                        "Parameters" : {
                            "feild.delim":","
                        },
                        "SerializationLibrary" : "org.openx.data.jsonserde.JsonSerDe"
                    }

                }                    
            }

        },
        "MappingData":{
            "DependsOn" : "GlueDatabase",
            "Type" : "AWS::Glue::Table",
            "Description" : "Glue Table for Mapping Data",
            "Properties" : {
                "CatalogId" : {"Ref":"AWS::AccountId"},
                "DatabaseName" : {"Ref":"GlueDatabaseName"},
                "TableInput" : {
                    "Description" : "Glue Table for Mapping Data",
                    "Name" : "smart_hub_sensor_mapping_json",
                    "Parameters" : {
                        "classification": "json", 
                        "compressionType": "none" 
                    },
                    "TableType" : "EXTERNAL TABLE",
                    "PartitionKeys" : [ 
                        {
                            "Name" : "state",
                            "Type" : "string"
                        }
                    ]
                },
                "StorageDescriptor" : {
                    "InputFormat" : "org.apache.hadoop.mapred.TextInputFormat",
                    "OutputFormat":"org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat",
                    "Columns":[
                        {
                            "Name" : "loc_id",
                            "Type" : "string"
                        },
                        {
                            "Name" : "id",
                            "Type" : "string"
                        },
                        {
                            "Name" : "description",
                            "Type" : "string"
                        },
                        {
                            "Name" : "location",
                            "Type" : "string"
                        },
                        {
                            "Name" : "watts",
                            "Type" : "int"
                        },
                        {
                            "Name" : "last_modified",
                            "Type" : "int"
                        }
                    ],
                    "Location" : { "Fn::Join" : [ "", [ "s3://", {"Ref":"DataBucketName"}, "/smart_hub_location_csv"] ] },
                    "SerdeInfo":{
                        "Parameters" : {
                            "feild.delim":","
                        },
                        "SerializationLibrary" : "org.openx.data.jsonserde.JsonSerDe"
                    }

                }                    
            }

        },
        "RatesData":{
            "DependsOn" : "GlueDatabase",
            "Type" : "AWS::Glue::Table",
            "Description" : "Glue Table for Rates Data",
            "Properties" : {
                "CatalogId" : {"Ref":"AWS::AccountId"},
                "DatabaseName" : {"Ref":"GlueDatabaseName"},
                "TableInput" : {
                    "Description" : "Glue Table for rates Data",
                    "Name" : "smart_hub_rates_xml",
                    "Parameters" : {
                        "classification": "xml", 
                        "compressionType": "none" 
                    },
                    "TableType" : "EXTERNAL TABLE"
                },
                "StorageDescriptor" : {
                    "InputFormat" : "org.apache.hadoop.mapred.TextInputFormat",
                    "OutputFormat":"org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat",
                    "Columns":[
                        {
                            "Name" : "from",
                            "Type" : "string"
                        },
                        {
                            "Name" : "month",
                            "Type" : "int"
                        },
                        {
                            "Name" : "rate",
                            "Type" : "double"
                        },
                        {
                            "Name" : "state",
                            "Type" : "string"
                        },
                        {
                            "Name" : "to",
                            "Type" : "string"
                        },
                        {
                            "Name" : "type",
                            "Type" : "string"
                        },
                        {
                            "Name": "year",
                            "Type": "string"
                        }
                    ],
                    "Location" : { "Fn::Join" : [ "", [ "s3://", {"Ref":"DataBucketName"}, "/smart_hub_rates_xml"] ] },
                    "SerdeInfo":{
                        "Parameters" : {
                            "feild.delim":","
                        },
                        "SerializationLibrary" : "org.openx.data.jsonserde.JsonSerDe"
                    }

                }                    
            }

        },
        "ETLParquettmpData":{
            "DependsOn" : "GlueDatabase",
            "Type" : "AWS::Glue::Table",
            "Description" : "Glue Table for Temporary Output Data",
            "Properties" : {
                "CatalogId" : {"Ref":"AWS::AccountId"},
                "DatabaseName" : {"Ref":"GlueDatabaseName"},
                "TableInput" : {
                    "Description" : "Glue Table for Temporary Output Data",
                    "Name" : "etl_tmp_output_parquet",
                    "Parameters" : {
                        "has_encrypted_data": "false",
                        "parquet.compression": "SNAPPY",
                        "classification": "parquet",
                        "compressionType": "none"
                    },
                    "TableType" : "EXTERNAL TABLE",
                    "PartitionKeys" : [ 
                        {
                            "Name" : "loc_id",
                            "Type" : "string"
                        }
                    ]
                },
                "StorageDescriptor" : {
                    "InputFormat" : "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
                    "OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
                    "Columns":[
                        {
                            "Name" : "ts",
                            "Type" : "string"
                        },
                        {
                            "Name" : "device",
                            "Type" : "string"
                        },
                        {
                            "Name" : "location",
                            "Type" : "string"
                        },
                        {
                            "Name" : "state",
                            "Type" : "string"
                        },
                        {
                            "Name" : "type",
                            "Type" : "string"
                        },
                        {
                            "Name" : "kwh",
                            "Type" : "double"
                        },
                        {
                            "Name": "cents_per_kwh",
                            "Type": "double"
                        },
                        {
                            "Name": "cost",
                            "Type": "double"
                        },
                        {
                            "Name": "state",
                            "Type": "string"
                        }
                    ],
                    "Location" : { "Fn::Join" : [ "", [ "s3://", {"Ref":"DataBucketName"}, "/etl_tmp_output_parquet"] ] },
                    "SerdeInfo":{
                        "SerializationLibrary" : "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe"
                    }

                }                    
            }

        },
        "CrawlerIAMRole":{
            "Type" : "AWS::IAM::Role",
            "Properties" : {
                "Description":"IAM Role for Crawlers",
                "AssumeRolePolicyDocument" : {
                    "Version": "2020-02-08",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "glue.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "ManagedPolicyArns" :["arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole"],
                "Path" : "/",
                "Policies" : [
                    {
                        "PolicyDocument" : {
                            "version":"2020-02-08",
                            "statement":[
                                {
                                    "Effect":"allow",
                                    "Action":[
                                        "s3:GetObject",
                                        "s3:PutObject",
                                        "s3:DeleteObject"
                                    ],
                                    "Resource":"*"
                                }
                            ]
                        },
                        "PolicyName" : "CrawlerIAMPolicy"
                    }
                ],
                "RoleName" : "Smart_Hub_Crawler_Role"
            }
        },
        "LocationCrawler":{
            "Type" : "AWS::Glue::Crawler",
            "Properties" : {
                "Configuration" : "{\"Version\":1.0,\"CrawlerOutput\":{\"Partitions\":{\"AddOrUpdateBehavior\":\"InheritFromTable\"},\"Tables\":{\"AddOrUpdateBehavior\":\"MergeNewColumns\"}}}",
                "Name" : "smart-hub-locations-csv",
                "Role" : {"Fn::GetAtt": ["CrawlerIAMRole","Arn"]},
                "SchemaChangePolicy" : {
                    "DeleteBehavior" : "UPDATE IN DATABASE",
                    "UpdateBehavior" : "LOG"
                },
                "Targets" : {
                    "CatalogTargets" : [
                        {
                            "DatabaseName" : { "Ref" : "GlueDatabaseName" },
                            "Tables" : [ { "Ref" : "LocationData" } ]
                          }
                    ]
                }
            },
            "DependsOn":[
                "CrawlerIAMRole",
                "GlueDatabase",
                "DataBucket"
            ]
        },
        "MappingCrawler":{
            "Type" : "AWS::Glue::Crawler",
            "Properties" : {
                "Configuration" : "{\"Version\":1.0,\"CrawlerOutput\":{\"Partitions\":{\"AddOrUpdateBehavior\":\"InheritFromTable\"},\"Tables\":{\"AddOrUpdateBehavior\":\"MergeNewColumns\"}}}",
                "Name" : "smart-hub-sensor-mappings-json",
                "Role" : {"Fn::GetAtt": ["CrawlerIAMRole","Arn"]},
                "SchemaChangePolicy" : {
                    "DeleteBehavior" : "UPDATE IN DATABASE",
                    "UpdateBehavior" : "LOG"
                },
                "Targets" : {
                    "CatalogTargets" : [
                        {
                            "DatabaseName" : { "Ref" : "GlueDatabaseName" },
                            "Tables" : [ { "Ref" : "MappingData" } ]
                        }
                    ]
                }
            },
            "DependsOn":[
                "CrawlerIAMRole",
                "GlueDatabase",
                "DataBucket"
            ]
        },
        "UsageCrawler":{
            "Type" : "AWS::Glue::Crawler",
            "Properties" : {
                "Configuration" : "{\"Version\":1.0,\"CrawlerOutput\":{\"Partitions\":{\"AddOrUpdateBehavior\":\"InheritFromTable\"},\"Tables\":{\"AddOrUpdateBehavior\":\"MergeNewColumns\"}}}",
                "Name" : "smart-hub-usage-data-json",
                "Role" : {"Fn::GetAtt": ["CrawlerIAMRole","Arn"]},
                "SchemaChangePolicy" : {
                    "DeleteBehavior" : "UPDATE IN DATABASE",
                    "UpdateBehavior" : "LOG"
                },
                "Targets" : {
                    "CatalogTargets" : [
                        {
                            "DatabaseName" : { "Ref" : "GlueDatabaseName" },
                            "Tables" : [ { "Ref" : "UsageData" } ]
                          }
                    ]
                }
            },
            "DependsOn":[
                "CrawlerIAMRole",
                "GlueDatabase",
                "DataBucket"
            ]
        },
        "RatesCrawler":{
            "Type" : "AWS::Glue::Crawler",
            "Properties" : {
                "Configuration" : "{\"Version\":1.0,\"CrawlerOutput\":{\"Partitions\":{\"AddOrUpdateBehavior\":\"InheritFromTable\"},\"Tables\":{\"AddOrUpdateBehavior\":\"MergeNewColumns\"}}}",
                "Name" : "smart-hub-rates-data-json",
                "Role" : {"Fn::GetAtt": ["CrawlerIAMRole","Arn"]},
                "SchemaChangePolicy" : {
                    "DeleteBehavior" : "UPDATE IN DATABASE",
                    "UpdateBehavior" : "LOG"
                },
                "Targets" : {
                    "CatalogTargets" : [
                        {
                            "DatabaseName" : { "Ref" : "GlueDatabaseName" },
                            "Tables" : [ { "Ref" : "RatesData" } ]
                          }
                    ]
                }
            },
            "DependsOn":[
                "CrawlerIAMRole",
                "GlueDatabase",
                "DataBucket"
            ]
        },
        "RatesParquetCrawler":{
            "Type" : "AWS::Glue::Crawler",
            "Properties" : {
                "Configuration" : "{\"Version\":1.0,\"CrawlerOutput\":{\"Partitions\":{\"AddOrUpdateBehavior\":\"InheritFromTable\"},\"Tables\":{\"AddOrUpdateBehavior\":\"MergeNewColumns\"}}}",
                "Name" : "smart-hub-rates-parquet",
                "Role" : {"Fn::GetAtt": ["CrawlerIAMRole","Arn"]},
                "SchemaChangePolicy" : {
                    "DeleteBehavior" : "UPDATE IN DATABASE",
                    "UpdateBehavior" : "LOG"
                },
                "Targets" : {
                    "S3Targets" : [
                        {
                            "path":{ "Fn::Join" : [ "", [ "s3://", {"Ref":"DataBucketName"}, "/smart_hub_rates_parquet"] ] }
                        }
                    ]
                }
            },
            "DependsOn":[
                "CrawlerIAMRole",
                "GlueDatabase",
                "DataBucket"
            ]
        },
        "ETLTempParquetCrawler":{
            "Type" : "AWS::Glue::Crawler",
            "Properties" : {
                "Configuration" : "{\"Version\":1.0,\"CrawlerOutput\":{\"Partitions\":{\"AddOrUpdateBehavior\":\"InheritFromTable\"},\"Tables\":{\"AddOrUpdateBehavior\":\"MergeNewColumns\"}}}",
                "Name" : "smart-hub-etl-tmp-parquet",
                "Role" : {"Fn::GetAtt": ["CrawlerIAMRole","Arn"]},
                "SchemaChangePolicy" : {
                    "DeleteBehavior" : "UPDATE IN DATABASE",
                    "UpdateBehavior" : "LOG"
                },
                "Targets" : {
                    "CatalogTargets" : [
                        {
                            "DatabaseName" : { "Ref" : "GlueDatabaseName" },
                            "Tables" : [ { "Ref" : "ETLParquettmpData" } ]
                          }
                    ]
                }
             },
            "DependsOn":[
                "CrawlerIAMRole",
                "GlueDatabase",
                "DataBucket"
            ]
        }, 
        "ETLParquetCrawler":{
            "Type" : "AWS::Glue::Crawler",
            "Properties" : {
                "Configuration" : "{\"Version\":1.0,\"CrawlerOutput\":{\"Partitions\":{\"AddOrUpdateBehavior\":\"InheritFromTable\"},\"Tables\":{\"AddOrUpdateBehavior\":\"MergeNewColumns\"}}}",
                "Name" : "smart-hub-etl-output-parquet",
                "Role" : {"Fn::GetAtt": ["CrawlerIAMRole","Arn"]},
                "SchemaChangePolicy" : {
                    "DeleteBehavior" : "UPDATE IN DATABASE",
                    "UpdateBehavior" : "LOG"
                },
                "Targets" : {
                    "CatalogTargets" : [
                        {
                            "DatabaseName" : { "Ref" : "GlueDatabaseName" },
                            "Tables" : [ "etl_output_parquet"]
                        }
                    ]
                }
            },
            "DependsOn":[
                "CrawlerIAMRole",
                "GlueDatabase",
                "DataBucket"
            ]
        },
        "ETLGlueJob":{
            "Type" : "AWS::Glue::Job",
            "Properties" : {
                "Command" : {
                    "Name" : "glueetl",
                    "PythonVersion" : 3,
                    "ScriptLocation" : {"Fn::Sub":"s3://${ScriptBucketName}/Glue_Job/rates_xml_to_parquet.py"}
                },
                "DefaultArguments":{
                    "--s3_output_path": {"Fn::Sub" : "s3://${DataBucketName}/smart_hub_rates_parquet"},
                    "--source_GlueDatabase": {"!Ref":"GlueDatabase"},
                    "--source_glue_table": "smart_hub_rates_xml",
                    "--job-bookmark-option": "job-bookmark-enable",
                    "--enable-spark-ui": "true",
                    "--spark-event-logs-path": {"Fn::Sub" : "s3://${LogBucketName}/glue-etl-jobs/"}
                },
                "Description" : "Job to convert electricity rates from xml to parquet",
                "ExecutionProperty" : {
                    "MaxConcurrentRuns":2
                },
                "GlueVersion" : "1.0",
                "MaxRetries" : 0,
                "Name" : "xml-to-parquet-etl-job",
                "Role" : {"Fn::GetAtt": ["CrawlerIAMRole","Arn"]}
            },
            "DependsOn":[
                "CrawlerIAMRole",
                "GlueDatabase",
                "DataBucket",
                "ScriptBucket",
                "logBucket"
            ]
        }
    },
    "Outputs":{
        "DataBucketExport":{
            "Description" : "S3 bucket that holds data files",
            "Value" : {"Ref":"DataBucketName"},
            "Export" : {
              "Name" : { "Fn::Join" : [ "-", [{"Ref":"AWS::StackName"}, "DataBucket"] ] }
            }
        },
        "ScriptBucketExport":{
            "Description" : "S3 bucket that holds Scripts",
            "Value" : {"Ref":"ScriptBucketName"},
            "Export" : {
              "Name" : { "Fn::Join" : [ "-", [{"Ref":"AWS::StackName"}, "ScriptBucket"] ] }
            }
        },
        "LogBucketExport":{
            "Description" : "S3 bucket that store logs",
            "Value" : {"Ref":"LogBucketName"},
            "Export" : {
              "Name" : { "Fn::Join" : [ "-", [{"Ref":"AWS::StackName"}, "logBucket"] ] }
            }
        },
        "GlueDatabaseExport":{
            "Description" : "Glue database",
            "Value" : {"Ref":"GlueDatabaseName"},
            "Export" : {
              "Name" : { "Fn::Join" : [ "-", [{"Ref":"AWS::StackName"}, "GlueDatabase"] ] }
            }
        }
    }
}